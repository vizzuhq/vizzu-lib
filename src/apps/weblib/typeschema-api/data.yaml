---
definitions:
    SeriesName:
        description: Name of the data series.
        type: string

    SeriesType:
        description: |
            Type of the data series:
            - 'dimension' - categorical data containing strings 
              (dates should also be added as strings); 
            - 'measure' - continuous data containing numbers.
        type: string
        enum: [dimension, measure]

    Value:
        description: Represents a categorical or data value
        oneOf:
            - type: string
            - type: number

    DimensionValue:
        description: Represents a categorical value
        type: string

    MeasureValue:
        description: Represents a data value
        type: number
        nullable: true

    SeriesBase:
        description: Base type for data series.
        type: object
        properties:
            name:
                description: Name of the data series. It will be the unique id of the series to
                    reference it in various parts of the API, mainly in channel configuration and
                    in data record filters. This name will also be used by default for Axis and
                    Legend title.
                $ref: SeriesName
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                $ref: SeriesType
        required: [name]

    BaseDimension:
        $extends: SeriesBase
        description: Name of a dimension data series.
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [dimension]
            values:
                description: |
                    The array that contains the values of the data series. The value types 
                    should match the data series' `type` property. If the data series
                    is shorter than the longest data series defined, it will be internally 
                    extended with empty values.
                type: array
                items:
                    $ref: DimensionValue
            isContiguous:
                description: |
                    If set to true, the dimension handled as a contiguous dimension 
                    like timestamps.
                type: boolean

    IndexDimension:
        $extends: SeriesBase
        description: Name of a dimension data series.
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [dimension]
            categories:
                description: Distinct unique values in the series
                type: array
                items:
                    type: string
            values:
                description: |
                    The array that contains the values of the data series. The value types 
                    should match the data series' `type` property. If the data series
                    is shorter than the longest data series defined, it will be internally 
                    extended with empty values.
                type: array
                items:
                    type: number
            isContiguous:
                description: |
                    If set to true, the dimension handled as a contiguous dimension 
                    like timestamps.
                type: boolean
        required: [categories]

    ImplicitStringDimension:
        $extends: BaseDimension
        description: Name of a dimension data series.
        type: object
        properties:
            values:
                description: |
                    The array that contains the values of the data series. The value types 
                    should match the data series' `type` property. If the data series
                    is shorter than the longest data series defined, it will be internally 
                    extended with empty values.
                type: array
                items:
                    $ref: DimensionValue
        required: [values]

    ExplicitStringDimension:
        $extends: BaseDimension
        description: Name of a dimension data series.
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [dimension]
        required: [type]

    StringDimension:
        description: Name of a dimension data series.
        oneOf:
            - $ref: ImplicitStringDimension
            - $ref: ExplicitStringDimension

    Dimension:
        description: Name of a dimension data series.
        oneOf:
            - $ref: IndexDimension
            - $ref: StringDimension

    BaseMeasure:
        $extends: SeriesBase
        description: Name of a measure data series.
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [measure]
            values:
                description: |
                    The array that contains the values of the data series. The value types 
                    should match the data series' `type` property. If the data series
                    is shorter than the longest data series defined, it will be internally 
                    extended with empty values.
                type: array
                items:
                    $ref: MeasureValue
            unit:
                description: Unit of the data series.
                type: string

    ExplicitMeasure:
        $extends: BaseMeasure
        description: Name of a measure data series.
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [measure]
        required: [type]

    ImplicitMeasure:
        $extends: BaseMeasure
        description: Name of a measure data series.
        type: object
        properties:
            values:
                description: |
                    The array that contains the values of the data series. The value types 
                    should match the data series' `type` property. If the data series
                    is shorter than the longest data series defined, it will be internally 
                    extended with empty values.
                type: array
                items:
                    $ref: MeasureValue
        required: [values]

    Measure:
        description: Name of a measure data series.
        oneOf:
            - $ref: ImplicitMeasure
            - $ref: ExplicitMeasure

    Range:
        type: object
        description: Represents a numeric interval.
        properties:
            min:
                description: Minimal value in the series
                type: number
            max:
                description: Maximal value in the series
                type: number
        required: [min, max]

    DimensionInfo:
        $extends: SeriesBase
        description: Meta data about dimension data series
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [dimension]
            categories:
                description: Distinct unique values in the series
                type: array
                items:
                    type: string
            length:
                description: Count of values in the series.
                type: number
            isContiguous:
                description: |
                    The dimension handled as a contiguous dimension like timestamps.
                type: boolean
        required: [type, categories, length, isContiguous]

    MeasureInfo:
        $extends: SeriesBase
        description: Meta data about measure data series
        type: object
        properties:
            type:
                description: |
                    Type of the data series.
                    If not set, the library will attempt to determine the type based on 
                    the type of the first value. Number type will result in measure, 
                    string type will result in dimension.
                type: string
                enum: [measure]
            range:
                $ref: Range
            unit:
                description: Unit of the data series.
                type: string
            length:
                description: Count of values in the series.
                type: number
        required: [type, range, unit, length]

    SeriesInfo:
        description: MetaInfo for different series types.
        oneOf:
            - $ref: DimensionInfo
            - $ref: MeasureInfo

    Series:
        description: |
            Defines a data series of the data set, and contains a particular variable's
            values in the data set and meta info about the variable.
        oneOf:
            - $ref: Dimension
            - $ref: Measure

    Record:
        description: |
            A record of the data set, containing one value of each data series 
            corresponding to the same index.
        type: object
        properties:
            operator[]:
                description: |
                    Properties are provided for each data series, providing access to the value within
                    the record referenced by its data series name.
                type: function
                arguments:
                    seriesName: { $ref: SeriesName }
                required: [seriesName]
                return: { $ref: Value }

    FilterCallback:
        type: function
        description: A callback function receives a record
        arguments:
            record: { $ref: Record }
        required: [record]
        return: { type: boolean }

    SeriesMetaInfo:
        $ref: SeriesInfo

    Metainfo:
        description: Meta data about the data set
        type: object
        properties:
            series:
                type: array
                items:
                    $ref: SeriesMetaInfo
        required: [series]
    Filter:
        type: object
        description: Filter object containing a filter function
        properties:
            filter:
                description: |
                    A filter callback is called on each record of the dataset on chart
                    generation. If the callback returns false, the record will not be shown on the chart.
                oneOf:
                    - $ref: FilterCallback
                    - type: string
                nullable: true

    TableBySeries:
        $extends: Filter
        description: Data table specified by series.
        type: object
        properties:
            series:
                description: The series that make up the data set.
                type: array
                items: { $ref: Series }
        required: [series]

    ValueArray:
        description: Values of a data record in the order of the series in the dataset.
        type: array
        items: { $ref: Value }

    TableByRecords:
        $extends: Filter
        description: Data table specified by records.
        type: object
        properties:
            series:
                description: |
                    The information about the data series in the records of the data set. 
                    Note: not needed if it was previously specified.
                type: array
                items:
                    $ref: Series
            records:
                description: The array of data records that make up the data set.
                type: array
                items:
                    oneOf:
                        - $ref: ValueArray
                        - $ref: Record
        required: [records]

    Set:
        description: |
            Data set is a collection of related data series. 
            Each chart works on a single data set.
        oneOf:
            - $ref: TableBySeries
            - $ref: TableByRecords

    AggregatorType:
        description: |
            Types of the different available data series aggregators:

            - sum: sum of the values (default)
            - count: count of the values
            - min: minima of the values
            - max: maxima of the values
            - mean: average/mean of the values
            - distinct: number of different values
        type: string
        enum: [sum, count, min, max, mean, distinct]

    SeriesDescriptor:
        description: |
            The name of a series with an aggregator function.
        type: object
        properties:
            name: { $ref: SeriesName }
            aggregator: { $ref: AggregatorType }
        required: [name]

    SeriesList:
        description: Array or a single data series.
        type: array
        items: { $ref: SeriesDescriptor }
