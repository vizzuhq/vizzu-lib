steps:
  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        mkdir -p /workspace/build/cmake-desktop &&
        mkdir -p /workspace/build/cmake-desktop-gcc &&
        mkdir -p /workspace/build/cmake-wasm
    entrypoint: bash
    id: mkdirBuildFolder
    waitFor:
      - '-'

  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        export CC=/usr/bin/gcc-12 &&
        export CXX=/usr/bin/g++-12 &&
        cmake -Dclangformat:BOOL="ON" ../../project/cmake/ &&
        cmake --build . -- --jobs=4
    entrypoint: bash
    dir: /workspace/build/cmake-desktop-gcc
    id: buildGcc
    waitFor:
      - mkdirBuildFolder
  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        cmake -Dclangtidy:BOOL="ON" -Dcppcheck:BOOL="ON" ../../project/cmake/ &&
        cmake --build . --target cvizzu vizzutest -- --jobs=8
    entrypoint: bash
    dir: /workspace/build/cmake-desktop
    id: buildClangTidy
    waitFor:
      - buildGcc
  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        source "/root/emsdk/emsdk_env.sh" && emcmake cmake ../../project/cmake/ &&
        cmake --build . -- --jobs=8
    entrypoint: bash
    dir: /workspace/build/cmake-wasm
    id: buildWasm
    waitFor:
      - buildGcc

  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        ./cmake-desktop/test/vizzutest &&
        ./cmake-desktop-gcc/test/vizzutest &&
        node ./cmake-wasm/test/vizzutest.js
    entrypoint: bash
    dir: /workspace/build
    id: test_cppUnit
    waitFor:
      - buildWasm
      - buildClangTidy

  - name: gcr.io/cloud-builders/gsutil
    args:
      - cp
      - 'gs://vizzu-lib-main/lib/size.txt'
      - '/workspace/build/cmake-wasm/weblib/size_downloaded.txt'
    id: download_size
    waitFor:
      - buildWasm
  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - python3
      - '-c'
      - |
        threshold = 1.05
        with open('/workspace/build/cmake-wasm/weblib/size.txt', 'r') as size_file:
            for line in size_file:
                file, actual_size = line.strip().split()
                downloaded_line = next(
                    (d_line for d_line in open('/workspace/build/cmake-wasm/weblib/size_downloaded.txt', 'r') if d_line.startswith(file)),
                    None
                )
                if downloaded_line:
                    downloaded_size = downloaded_line.split()[1]
                    if float(actual_size) > float(downloaded_size) * threshold:
                        print(f"Error: File {file} size exceeds the threshold.")
                        exit(1)
                    else:
                        print(f"Success: File {file} size comparison passed. Actual: {actual_size}, Downloaded: {downloaded_size}")
                else:
                    print(f"Warning: Downloaded size not found for file {file}. Skipping comparison. Actual: {actual_size}")

    id: test_size
    waitFor:
      - download_size

  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        npm install &&
        npm run build
    entrypoint: bash
    dir: /workspace/project/js
    id: packageJs
    waitFor:
      - buildWasm

  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--build-arg'
      - 'TAG=v0.8.x'
      - '-t'
      - 'gcr.io/vizzu-ci/github.com/vizzuhq/vizzu-jsunittest-cloudbuild:$BRANCH_NAME'
      - '-f'
      - ./ci/docker/vizzu-jsunittest-cloudbuild
      - .
    id: test_jsUnit
    waitFor:
      - buildWasm

  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '--build-arg'
      - 'TAG=v0.8.x'
      - '-t'
      - 'gcr.io/vizzu-ci/github.com/vizzuhq/vizzu-test-cloudbuild:$BRANCH_NAME'
      - '-f'
      - ./ci/docker/vizzu-test-cloudbuild
      - .
    id: test_integration
    waitFor:
      - packageJs

  - name: vizzu/vizzu-devenv:v0.8.x
    args:
      - '-c'
      - |-
        if [ $BRANCH_NAME == "main" ]
        then
          echo $SHORT_SHA > sha.txt
        fi
    dir: /workspace/example
    id: meta_generate
    waitFor:
      - test_size
      - test_cppUnit
      - test_jsUnit
      - test_integration
    entrypoint: bash
  - name: gcr.io/cloud-builders/gsutil
    args:
      - '-c'
      - |-
        if [ $BRANCH_NAME == "main" ]
        then
          gsutil -m cp '/workspace/example/sha.txt' 'gs://vizzu-lib-main/lib'
          gsutil -m cp '/workspace/build/cmake-wasm/weblib/size.txt' 'gs://vizzu-lib-main/lib'
        fi
    id: meta_upload
    waitFor:
      - meta_generate
    entrypoint: bash
  - name: gcr.io/cloud-builders/gsutil
    args:
      - '-c'
      - |-
        if [ $BRANCH_NAME == "main" ]
        then
          gsutil -m cp -r '/workspace/example/lib/*' 'gs://vizzu-lib-main/lib'
        fi
    id: lib_upload
    waitFor:
      - test_size
      - test_cppUnit
      - test_jsUnit
      - test_integration
    entrypoint: bash
  - name: gcr.io/cloud-builders/gsutil
    args:
      - '-c'
      - |-
        if [ $BRANCH_NAME == "main" ]
        then
          gsutil -m setmeta -r -h 'cache-control: max-age=0,public' 'gs://vizzu-lib-main/*'
        fi
    id: lib_setCacheControl
    waitFor:
      - lib_upload
    entrypoint: bash

  - name: gcr.io/cloud-builders/gsutil
    args:
      - '-m'
      - cp
      - '-r'
      - /workspace/example/lib/*
      - 'gs://vizzu-lib-main-sha/lib-$SHORT_SHA'
    id: shalib_upload
    waitFor:
      - packageJs

timeout: 1800s
options:
  machineType: E2_HIGHCPU_8
